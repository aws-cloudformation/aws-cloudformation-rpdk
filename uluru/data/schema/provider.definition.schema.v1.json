{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "provider.definition.schema.v1.json",
    "title": "CloudFormation Resource Provider Definition MetaSchema",
    "description": "This schema validates a CloudFormation resource provider definition.",
    "definitions": {
        "schemaArray": {
            "allOf": [
                { "$ref": "http://json-schema.org/draft-07/schema#/definitions/schemaArray" },
                {
                    "items": { "$ref": "#/definitions/properties" }
                }
            ]
        },
        "properties": {
            "allOf": [
                { "type": "object" },
                {
                    "properties": {
                        "insertionOrder": {
                            "$comment": "When set to true, this flag indicates that the order of insertion of the array will be honored, and that changing the order of the array would indicate a diff",
                            "type": "boolean",
                            "default": false
                        },
                        "$id": { "$ref": "http://json-schema.org/draft-07/schema#/properties/$id" },
                        "$ref": { "$ref": "http://json-schema.org/draft-07/schema#/properties/$ref" },
                        "$comment": { "$ref": "http://json-schema.org/draft-07/schema#/properties/$comment" },
                        "$title": { "$ref": "http://json-schema.org/draft-07/schema#/properties/title" },
                        "description": { "$ref": "http://json-schema.org/draft-07/schema#/properties/description" },
                        "examples": { "$ref": "http://json-schema.org/draft-07/schema#/properties/examples" },
                        "default": { "$ref": "http://json-schema.org/draft-07/schema#/properties/default" },
                        "multipleOf": { "$ref": "http://json-schema.org/draft-07/schema#/properties/multipleOf" },
                        "maximum": { "$ref": "http://json-schema.org/draft-07/schema#/properties/maximum" },
                        "exclusiveMaximum": { "$ref": "http://json-schema.org/draft-07/schema#/properties/exclusiveMaximum" },
                        "minimum": { "$ref": "http://json-schema.org/draft-07/schema#/properties/minimum" },
                        "exclusiveMinimum": { "$ref": "http://json-schema.org/draft-07/schema#/properties/exclusiveMinimum" },
                        "maxLength": { "$ref": "http://json-schema.org/draft-07/schema#/properties/maxLength" },
                        "minLength": { "$ref": "http://json-schema.org/draft-07/schema#/properties/minLength" },
                        "pattern": { "$ref": "http://json-schema.org/draft-07/schema#/properties/pattern" },
                        "additionalItems": { "$ref": "http://json-schema.org/draft-07/schema#/properties/additionalItems" },
                        "items": { "$ref": "http://json-schema.org/draft-07/schema#/properties/items" },
                        "maxItems": { "$ref": "http://json-schema.org/draft-07/schema#/properties/maxItems" },
                        "minItems": { "$ref": "http://json-schema.org/draft-07/schema#/properties/minItems" },
                        "uniqueItems": { "$ref": "http://json-schema.org/draft-07/schema#/properties/uniqueItems" },
                        "contains": { "$ref": "http://json-schema.org/draft-07/schema#/properties/contains" },
                        "maxProperties": { "$ref": "http://json-schema.org/draft-07/schema#/properties/maxProperties" },
                        "minProperties": { "$ref": "http://json-schema.org/draft-07/schema#/properties/minProperties" },
                        "required": { "$ref": "http://json-schema.org/draft-07/schema#/properties/required" },
                        "additionalProperties": { "$ref": "http://json-schema.org/draft-07/schema#/properties/additionalProperties" },
                        "dependencies": { "$ref": "http://json-schema.org/draft-07/schema#/properties/dependencies" },
                        "const": { "$ref": "http://json-schema.org/draft-07/schema#/properties/const" },
                        "enum": { "$ref": "http://json-schema.org/draft-07/schema#/properties/enum" },
                        "type": { "$ref": "http://json-schema.org/draft-07/schema#/properties/type" },
                        "format": { "$ref": "http://json-schema.org/draft-07/schema#/properties/format" },
                        "allOf": { "$ref": "http://json-schema.org/draft-07/schema#/properties/allOf" },
                        "anyOf": { "$ref": "http://json-schema.org/draft-07/schema#/properties/anyOf" },
                        "oneOf": { "$ref": "http://json-schema.org/draft-07/schema#/properties/oneOf" }
                    },
                    "anyOf": [
                        { "required": [ "$ref" ] },
                        { "required": [ "type" ] },
                        { "required": [ "oneOf" ] },
                        { "required": [ "anyOf" ] },
                        { "required": [ "allOf" ] }
                    ]
                }
            ]
        }
    },
    "type": "object",
    "properties": {
        "$id": { "$ref": "http://json-schema.org/draft-07/schema#/properties/$id" },
        "typeName": {
            "$comment": "Resource Type Identifier (e.g; Organization::Service::Resource)",
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{2,64}::[a-zA-Z0-9]{2,64}::[a-zA-Z0-9]{2,64}$"
        },
        "sourceUrl": {
            "$comment": "Source Code Location (e.g; .git URL)",
            "type": "string"
        },
        "additionalProperties": {
            "$comment": "All properties of a resource must be expressed in the schema - arbitrary inputs are not allowed",
            "type": "boolean",
            "const": false
        },
        "properties": {
            "type": "object",
            "patternProperties": {
                "^[A-Za-z0-9]{1,64}$": { "$ref": "#/definitions/properties" }
            },
            "additionalProperties": false,
            "minProperties": 1
        },
        "readOnly": {
            "description": "A list of properties that are able to be found in a Read request but unable to be specified by the customer",
            "$ref": "http://json-schema.org/draft-07/schema#/definitions/stringArray"
        },
        "writeOnly": {
            "description": "A list of properties (typically sensitive) that are able to be specified by the customer but unable to be returned in a Read request",
            "$ref": "http://json-schema.org/draft-07/schema#/definitions/stringArray"
        },
        "required": { "$ref": "http://json-schema.org/draft-07/schema#/properties/required" }
    },
    "required": [
        "typeName", "properties"
    ]
}

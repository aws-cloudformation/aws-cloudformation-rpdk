
# This workflow will install Python dependencies, run tests and lint with a multiple versions of Python
name: CloudFormation CLI Pull Request CI

on: [push, pull_request]

jobs:
  build:
    env:
      AWS_DEFAULT_REGION: us-east-1
    strategy:
      matrix:
        python: [ 3.7, 3.8, 3.9, "3.10" ]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        pip install --upgrade 'attrs==19.2.0' wheel -r requirements.txt
    - name: Install updated cli and public cloudformation-cli-python-plugin
      run: |
        pip install .
        pip install --quiet cloudformation-cli-python-plugin
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit/
        key: ${{ matrix.os }}-${{ env.pythonLocation }}${{ hashFiles('.pre-commit-config.yaml') }}
    - name: pre-commit, twine checks
      run: |
        pre-commit run --all-files
        python setup.py sdist bdist_wheel
        twine check ./dist/*
    - name: Run Verbose CLI commands for python3.7
      run: |
        mkdir test-python37
        cd test-python37
        cfn init -t CLI::TEST::INIT -f --artifact-type resource -vvv python37 --use-docker
        cfn validate -vvv
        cfn generate -vvv
        mkdir ../test-python37-module
        cd ../test-python37-module
        cfn init -t CLI::TEST::INIT::MODULE -f --artifact-type module -vvv python37 --use-docker
        cfn validate -vvv
        cfn generate -vvv
        # Hook init requires CLI credentials
        # mkdir ../test-python37-hook
        # cd ../test-python37-hook
        # cfn init -t CLI::TEST::INIT -f --artifact-type hook -vvv python37 --use-docker
        # cfn validate -vvv
        # cfn generate -vvv
    - name: Run Verbose CLI commands for python3.6
      run: |
        mkdir test-python36
        cd test-python36
        cfn init -t CLI::TEST::INIT -f --artifact-type resource -vvv python36 --use-docker
        cfn validate -vvv
        cfn generate -vvv
        mkdir ../test-python36-module
        cd ../test-python36-module
        cfn init -t CLI::TEST::INIT::MODULE -f --artifact-type module -vvv python36 --use-docker
        cfn validate -vvv
        cfn generate -vvv
        # Hook init requires CLI credentials
        # mkdir ../test-python36-hook
        # cd ../test-python36-hook
        # cfn init -t CLI::TEST::INIT -f --artifact-type hook -vvv python36 --use-docker
        # cfn validate -vvv
        # cfn generate -vvv
